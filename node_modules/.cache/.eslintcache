[{"C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\index.tsx":"1","C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\App.tsx":"2","C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\reportWebVitals.ts":"3","C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\components\\Navbar\\Navbar.tsx":"4","C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\app\\pages\\Home\\Home.tsx":"5","C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\app\\components\\Cards\\Cards.tsx":"6"},{"size":358,"mtime":1671184546677,"results":"7","hashOfConfig":"8"},{"size":929,"mtime":1671186393544,"results":"9","hashOfConfig":"8"},{"size":440,"mtime":1671103281452,"results":"10","hashOfConfig":"8"},{"size":4951,"mtime":1671183666437,"results":"11","hashOfConfig":"8"},{"size":607,"mtime":1671184546674,"results":"12","hashOfConfig":"8"},{"size":4847,"mtime":1671184546669,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i8cvaj",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\index.tsx",[],[],"C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\App.tsx",[],[],"C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\reportWebVitals.ts",[],[],"C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\components\\Navbar\\Navbar.tsx",["33","34"],[],"import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { Tooltip } from \"@mui/material\";\r\nimport SL from \"../../app/assets/icons/sl.jpg\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport List from \"@mui/material/List\";\r\nimport Button from \"@mui/material/Button\";\r\nimport HouseIcon from \"@mui/icons-material/House\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  type Anchor = \"left\";\r\n\r\n  const [drawer, setDrawer] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const toggleDrawer =\r\n    (anchor: Anchor, open: boolean) =>\r\n    (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n          (event as React.KeyboardEvent).key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      setDrawer({ ...drawer, [anchor]: open });\r\n    };\r\n\r\n  const list = (anchor: Anchor) => (\r\n    <Box\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Home\", \"On\", \"Verra\", \"Plus Tard\"].map((text, index) => (\r\n          <ListItem key={text} disablePadding>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                <HouseIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={text}>\r\n                <Link to=\"/home\"></Link>\r\n              </ListItemText>\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={auth}\r\n              onChange={handleChange}\r\n              aria-label=\"login switch\"\r\n            />\r\n          }\r\n          label={auth ? \"Logout\" : \"Login\"}\r\n        />\r\n      </FormGroup>\r\n\r\n      <AppBar>\r\n        <Toolbar>\r\n          <div>\r\n            {([\"left\"] as const).map((anchor) => (\r\n              <React.Fragment key={anchor}>\r\n                <IconButton onClick={toggleDrawer(anchor, true)}>\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Drawer\r\n                  anchor={anchor}\r\n                  open={drawer[anchor]}\r\n                  onClose={toggleDrawer(anchor, false)}\r\n                >\r\n                  {list(anchor)}\r\n                </Drawer>\r\n              </React.Fragment>\r\n            ))}\r\n          </div>\r\n          <IconButton className={styles.menuIcon}></IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            EloBoosting\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <Tooltip title=\"Open settings\">\r\n                <IconButton onClick={handleMenu} sx={{ p: 0 }}>\r\n                  <Avatar alt=\"\" src={SL} />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\app\\pages\\Home\\Home.tsx",[],[],"C:\\Users\\natha\\Desktop\\EloBoostProject\\Eloboost-Front\\src\\app\\components\\Cards\\Cards.tsx",[],[],{"ruleId":"35","severity":1,"message":"36","line":8,"column":8,"nodeType":"37","messageId":"38","endLine":8,"endColumn":21},{"ruleId":"35","severity":1,"message":"39","line":24,"column":8,"nodeType":"37","messageId":"38","endLine":24,"endColumn":14},"@typescript-eslint/no-unused-vars","'AccountCircle' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used."]