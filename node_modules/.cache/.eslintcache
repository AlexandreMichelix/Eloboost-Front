[{"/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/index.tsx":"1","/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/App.tsx":"2","/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/reportWebVitals.ts":"3","/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/components/Navbar/Navbar.tsx":"4","/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/app/pages/Home/Home.tsx":"5","/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/app/components/Cards/Cards.tsx":"6"},{"size":342,"mtime":1671184506292,"results":"7","hashOfConfig":"8"},{"size":895,"mtime":1671186101877,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1671103059832,"results":"10","hashOfConfig":"8"},{"size":4796,"mtime":1671184229108,"results":"11","hashOfConfig":"8"},{"size":579,"mtime":1671184506288,"results":"12","hashOfConfig":"8"},{"size":4756,"mtime":1671184506284,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nz00jc",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/index.tsx",[],[],"/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/App.tsx",[],[],"/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/reportWebVitals.ts",[],[],"/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/components/Navbar/Navbar.tsx",["34","35"],[],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { Tooltip } from \"@mui/material\";\nimport SL from \"../../app/assets/icons/sl.jpg\";\nimport styles from \"./Navbar.module.css\";\nimport Drawer from \"@mui/material/Drawer\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport List from \"@mui/material/List\";\nimport Button from \"@mui/material/Button\";\nimport HouseIcon from \"@mui/icons-material/House\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  type Anchor = \"left\";\n\n  const [drawer, setDrawer] = React.useState({\n    left: false,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleDrawer =\n    (anchor: Anchor, open: boolean) =>\n    (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n\n      setDrawer({ ...drawer, [anchor]: open });\n    };\n\n  const list = (anchor: Anchor) => (\n    <Box\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Home\", \"On\", \"Verra\", \"Plus Tard\"].map((text, index) => (\n          <ListItem key={text} disablePadding>\n            <ListItemButton>\n              <ListItemIcon>\n                <HouseIcon />\n              </ListItemIcon>\n              <ListItemText primary={text}>\n                <Link to=\"/home\"></Link>\n              </ListItemText>\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={auth}\n              onChange={handleChange}\n              aria-label=\"login switch\"\n            />\n          }\n          label={auth ? \"Logout\" : \"Login\"}\n        />\n      </FormGroup>\n\n      <AppBar>\n        <Toolbar>\n          <div>\n            {([\"left\"] as const).map((anchor) => (\n              <React.Fragment key={anchor}>\n                <IconButton onClick={toggleDrawer(anchor, true)}>\n                  <MenuIcon />\n                </IconButton>\n                <Drawer\n                  anchor={anchor}\n                  open={drawer[anchor]}\n                  onClose={toggleDrawer(anchor, false)}\n                >\n                  {list(anchor)}\n                </Drawer>\n              </React.Fragment>\n            ))}\n          </div>\n          <IconButton className={styles.menuIcon}></IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            EloBoosting\n          </Typography>\n          {auth && (\n            <div>\n              <Tooltip title=\"Open settings\">\n                <IconButton onClick={handleMenu} sx={{ p: 0 }}>\n                  <Avatar alt=\"\" src={SL} />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n",[],"/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/app/pages/Home/Home.tsx",[],[],"/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/app/components/Cards/Cards.tsx",[],[],{"ruleId":"36","severity":1,"message":"37","line":8,"column":8,"nodeType":"38","messageId":"39","endLine":8,"endColumn":21},{"ruleId":"36","severity":1,"message":"40","line":24,"column":8,"nodeType":"38","messageId":"39","endLine":24,"endColumn":14},"@typescript-eslint/no-unused-vars","'AccountCircle' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used."]