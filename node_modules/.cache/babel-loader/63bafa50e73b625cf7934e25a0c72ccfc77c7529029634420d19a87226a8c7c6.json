{"ast":null,"code":"import { loadStripe } from \"@stripe/stripe-js\";\nexport async function checkout(_ref) {\n  let {\n    lineItems\n  } = _ref;\n  console.log('toto');\n  let stripePromise;\n  const getStripe = () => {\n    if (!stripePromise) {\n      stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY);\n    }\n    return stripePromise;\n  };\n  try {\n    // const stripe = await getStripe();\n    //\n    // await stripe?.redirectToCheckout({\n    //     mode: 'payment',\n    //     lineItems,\n    //     successUrl: `toto?session_id={CHECKOUT_SESSION_ID}`,\n    //     cancelUrl: 'osf'\n    // })\n  } catch (e) {\n    console.log(e);\n  }\n}","map":{"version":3,"names":["loadStripe","checkout","lineItems","console","log","stripePromise","getStripe","process","env","NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY","e"],"sources":["/home/alexandre/Documents/Ynov/Full_Stack/Eloboost-Front/src/checkout.tsx"],"sourcesContent":["import {loadStripe, Stripe} from \"@stripe/stripe-js\";\n\nexport async function checkout({lineItems}: any) {\n    console.log('toto')\n    let stripePromise: Promise<Stripe | null>;\n\n    const getStripe = () => {\n        if(!stripePromise) {\n            stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY as string);\n        }\n        return stripePromise;\n    }\n\n\n    try {\n        // const stripe = await getStripe();\n        //\n        // await stripe?.redirectToCheckout({\n        //     mode: 'payment',\n        //     lineItems,\n        //     successUrl: `toto?session_id={CHECKOUT_SESSION_ID}`,\n        //     cancelUrl: 'osf'\n        // })\n\n    } catch (e) {\n        console.log(e)\n    }\n\n\n}"],"mappings":"AAAA,SAAQA,UAAU,QAAe,mBAAmB;AAEpD,OAAO,eAAeC,QAAQ,OAAmB;EAAA,IAAlB;IAACC;EAAc,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,IAAIC,aAAqC;EAEzC,MAAMC,SAAS,GAAG,MAAM;IACpB,IAAG,CAACD,aAAa,EAAE;MACfA,aAAa,GAAGL,UAAU,CAACO,OAAO,CAACC,GAAG,CAACC,kCAAkC,CAAW;IACxF;IACA,OAAOJ,aAAa;EACxB,CAAC;EAGD,IAAI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CAEH,CAAC,OAAOK,CAAC,EAAE;IACRP,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC;EAClB;AAGJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}